<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwhalecloud.retail.report.mapper.ReportStoreMapper">

    <select id="ListReportStSale" parameterType="com.iwhalecloud.retail.report.dto.request.ReportStSaleDaoReq"
            resultType="com.iwhalecloud.retail.report.dto.response.ReportStSaleDaoResp">
       SELECT 
			 a.PARTNER_NAME AS partnerName,	
			 a.PARTNER_CODE AS partnerCode,	
			 a.BUSINESS_ENTITY_NAME AS businessEntityName,
			 a.CITY_ID AS cityId,		
			 so.org_name AS orgName,
			 a.PRODUCT_NAME AS productName,
			 a.PRODUCT_BASE_NAME AS productBaseName,	
			 a.PRODUCT_TYPE AS productType,
			 a.BRAND_NAME AS brandName,		
			 a.PRICE_LEVEL AS priceLevel,	
			 SUM(a.TOTAL_IN_NUM) AS totalInNum,	
			 SUM(a.TOTAL_OUT_NUM) AS totalOutNum,	
			 a.STOCK_NUM AS stockNum,
			 SUM(a.PURCHASE_NUM) AS purchaseNum,	
			 SUM(a.MANUAL_NUM) AS manualNum,	
			 SUM(a.TRANS_IN_NUM) AS transInNum,	
			 SUM(a.PURCHASE_AMOUNT) AS purchaseAmount,	
			 SUM(a.SELL_NUM) AS sellNum,
			 SUM(a.SELL_AMOUNT) AS sellAmount,		
			 SUM(a.UNCONTRACT_NUM) AS uncontractNum,	
			 SUM(a.CONTRACT_NUM) AS contractNum,	
			 SUM(a.REGISTER_NUM) AS registerNum,
			 a.WEEK_AVG_SELL_NUM AS weekAvgSellNum,	
			 a.STOCK_AMOUNT AS stockAmount,	
			 a.TURNOVER_RATE as turnoverRate,	
			 a.stock_warning AS stockWarning,
			 a.partner_code,
			 a.product_base_id
			FROM RPT_PARTNER_OPERATING_DAY a
			LEFT JOIN par_merchant par ON par.merchant_code = a.PARTNER_CODE
			LEFT JOIN sys_organization so ON par.par_crm_org_id = so.org_id
	where 1=1
	<if test="req.dateStart!=null and req.dateStart!=''">
		and str_to_date(a.DATE,'%Y-%m-%d') &gt;= str_to_date(#{req.dateStart}, '%Y-%m-%d')
	</if>
	<if test="req.dateStart!=null and req.dateStart!=''">
			and str_to_date(a.DATE,'%Y-%m-%d') &lt;= str_to_date(#{req.dateEnd}, '%Y-%m-%d')
	</if>
	<if test="req.lanIdList !=null and req.lanIdList.size()>0">
          and a.CITY_ID in
          <foreach collection="req.lanIdList" open="(" item="item" index="index" separator="," close=")">
              #{item}
          </foreach>
    </if>
    <if test="req.orgName!=null and req.orgName.size()>0">
	  	and 
	  	<foreach collection="req.orgName" open="(" item="item" index="index" separator=" or " close=")">
	  		INSTR( so.path_code, #{item}) 
	  	</foreach>
	</if> 
	<if test="req.stockWarning!=null and req.stockWarning!=''">  
		and a.stock_warning=#{req.stockWarning}
	</if>
	<if test="req.productType!=null and req.productType!=''">  
		and a.TYPE_ID=#{req.productType}
	</if>
	<if test="req.brandName!=null and req.brandName!=''">
		and a.brand_id=#{req.brandName}
	</if>
	<if test="req.productName!=null and req.productName!=''">
		and a.PRODUCT_NAME like CONCAT(CONCAT('%',#{req.productName}),'%')
	</if>
	<if test="req.productBaseName!=null and req.productBaseName!=''">
		and a.PRODUCT_BASE_ID=#{req.productBaseName}
	</if>
	<if test="req.partnerName!=null and req.partnerName!=''">
		and a.PARTNER_NAME like CONCAT(CONCAT('%',#{req.partnerName}),'%')
	</if>
	<if test="req.partnerCode!=null and req.partnerCode!=''">
		and a.PARTNER_CODE = #{req.partnerCode}
	</if>
	<if test="req.businessEntityName!=null and req.businessEntityName!=''">
		and a.BUSINESS_ENTITY_NAME like CONCAT(CONCAT('%',#{req.businessEntityName}),'%')
	</if>
	GROUP BY a.partner_code,a.product_base_id
  </select>
</mapper>
